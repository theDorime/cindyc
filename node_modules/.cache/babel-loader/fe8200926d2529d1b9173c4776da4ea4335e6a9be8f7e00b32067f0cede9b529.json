{"ast":null,"code":"class Point {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.x = 0;\n    this.y = 0;\n    this.x = x;\n    this.y = y;\n  }\n  clone() {\n    return new Point(this.x, this.y);\n  }\n  copyFrom(p) {\n    this.set(p.x, p.y);\n    return this;\n  }\n  copyTo(p) {\n    p.set(this.x, this.y);\n    return p;\n  }\n  equals(p) {\n    return p.x === this.x && p.y === this.y;\n  }\n  set() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  toString() {\n    return `[@pixi/math:Point x=${this.x} y=${this.y}]`;\n  }\n}\nexport { Point };","map":{"version":3,"names":["Point","constructor","x","arguments","length","undefined","y","clone","copyFrom","p","set","copyTo","equals","toString"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\math\\src\\Point.ts"],"sourcesContent":["import type { IPoint } from './IPoint';\nimport type { IPointData } from './IPointData';\n\nexport interface Point extends GlobalMixins.Point, IPoint {}\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where `x` represents\n * the position on the horizontal axis and `y` represents the position on the vertical axis\n * @class\n * @memberof PIXI\n * @implements {IPoint}\n */\nexport class Point implements IPoint\n{\n    /** Position of the point on the x axis */\n    public x = 0;\n    /** Position of the point on the y axis */\n    public y = 0;\n\n    /**\n     * Creates a new `Point`\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(x = 0, y = 0)\n    {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Creates a clone of this point\n     * @returns A clone of this point\n     */\n    clone(): Point\n    {\n        return new Point(this.x, this.y);\n    }\n\n    /**\n     * Copies `x` and `y` from the given point into this point\n     * @param p - The point to copy from\n     * @returns The point instance itself\n     */\n    copyFrom(p: IPointData): this\n    {\n        this.set(p.x, p.y);\n\n        return this;\n    }\n\n    /**\n     * Copies this point's x and y into the given point (`p`).\n     * @param p - The point to copy to. Can be any of type that is or extends `IPointData`\n     * @returns The point (`p`) with values updated\n     */\n    copyTo<T extends IPoint>(p: T): T\n    {\n        p.set(this.x, this.y);\n\n        return p;\n    }\n\n    /**\n     * Accepts another point (`p`) and returns `true` if the given point is equal to this point\n     * @param p - The point to check\n     * @returns Returns `true` if both `x` and `y` are equal\n     */\n    equals(p: IPointData): boolean\n    {\n        return (p.x === this.x) && (p.y === this.y);\n    }\n\n    /**\n     * Sets the point to a new `x` and `y` position.\n     * If `y` is omitted, both `x` and `y` will be set to `x`.\n     * @param {number} [x=0] - position of the point on the `x` axis\n     * @param {number} [y=x] - position of the point on the `y` axis\n     * @returns The point instance itself\n     */\n    set(x = 0, y = x): this\n    {\n        this.x = x;\n        this.y = y;\n\n        return this;\n    }\n\n    // #if _DEBUG\n    toString(): string\n    {\n        return `[@pixi/math:Point x=${this.x} y=${this.y}]`;\n    }\n    // #endif\n}\n"],"mappings":"AAYO,MAAMA,KACb;EAWIC,WAAYA,CAAA,EACZ;IAAA,IADYC,CAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAI,CAAG;IAAA,IAAAG,CAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAI,CACvB;IAVA,KAAOD,CAAI;IAEX,KAAOI,CAAI;IASP,KAAKJ,CAAI,GAAAA,CAAA;IACT,KAAKI,CAAI,GAAAA,CAAA;EAAA;EAObC,KACAA,CAAA;IACI,OAAO,IAAIP,KAAA,CAAM,IAAK,CAAAE,CAAA,EAAG,KAAKI,CAAC;EAAA;EAQnCE,SAASC,CACT;IACI,KAAKC,GAAI,CAAAD,CAAA,CAAEP,CAAG,EAAAO,CAAA,CAAEH,CAAC;IAEV;EAAA;EAQXK,OAAyBF,CACzB;IACIA,CAAA,CAAEC,GAAI,MAAKR,CAAG,OAAKI,CAAC;IAEb,OAAAG,CAAA;EAAA;EAQXG,OAAOH,CACP;IACI,OAAQA,CAAA,CAAEP,CAAM,UAAKA,CAAO,IAAAO,CAAA,CAAEH,CAAA,KAAM,IAAK,CAAAA,CAAA;EAAA;EAU7CI,GAAIA,CAAA,EACJ;IAAA,IADIR,CAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAI,CAAG;IAAA,IAAAG,CAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAID,CACf;IACI,KAAKA,CAAI,GAAAA,CAAA;IACT,KAAKI,CAAI,GAAAA,CAAA;IAEF;EAAA;EAIXO,QACAA,CAAA;IACW,8BAAuB,IAAK,CAAAX,CAAA,MAAO,IAAK,CAAAI,CAAA;EAAA;AAGvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}