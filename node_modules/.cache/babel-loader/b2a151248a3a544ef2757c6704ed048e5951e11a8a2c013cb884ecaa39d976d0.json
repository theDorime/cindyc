{"ast":null,"code":"import { Texture } from '@pixi/core';\nimport { Mesh, MeshGeometry, MeshMaterial } from '@pixi/mesh';\nclass SimpleMesh extends Mesh {\n  constructor() {\n    let texture = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Texture.EMPTY;\n    let vertices = arguments.length > 1 ? arguments[1] : undefined;\n    let uvs = arguments.length > 2 ? arguments[2] : undefined;\n    let indices = arguments.length > 3 ? arguments[3] : undefined;\n    let drawMode = arguments.length > 4 ? arguments[4] : undefined;\n    const geometry = new MeshGeometry(vertices, uvs, indices);\n    geometry.getBuffer(\"aVertexPosition\").static = false;\n    const meshMaterial = new MeshMaterial(texture);\n    super(geometry, meshMaterial, null, drawMode);\n    this.autoUpdate = true;\n  }\n  get vertices() {\n    return this.geometry.getBuffer(\"aVertexPosition\").data;\n  }\n  set vertices(value) {\n    this.geometry.getBuffer(\"aVertexPosition\").data = value;\n  }\n  _render(renderer) {\n    if (this.autoUpdate) {\n      this.geometry.getBuffer(\"aVertexPosition\").update();\n    }\n    super._render(renderer);\n  }\n}\nexport { SimpleMesh };","map":{"version":3,"names":["SimpleMesh","Mesh","constructor","texture","arguments","length","undefined","Texture","EMPTY","vertices","uvs","indices","drawMode","geometry","MeshGeometry","getBuffer","static","meshMaterial","MeshMaterial","autoUpdate","data","value","_render","renderer","update"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\mesh-extras\\src\\SimpleMesh.ts"],"sourcesContent":["import { Texture } from '@pixi/core';\nimport { Mesh, MeshGeometry, MeshMaterial } from '@pixi/mesh';\n\nimport type { DRAW_MODES, IArrayBuffer, ITypedArray, Renderer } from '@pixi/core';\n\n/**\n * The Simple Mesh class mimics Mesh in PixiJS v4, providing easy-to-use constructor arguments.\n * For more robust customization, use {@link PIXI.Mesh}.\n * @memberof PIXI\n */\nexport class SimpleMesh extends Mesh\n{\n    /** Upload vertices buffer each frame. */\n    public autoUpdate: boolean;\n\n    /**\n     * @param texture - The texture to use\n     * @param {Float32Array} [vertices] - if you want to specify the vertices\n     * @param {Float32Array} [uvs] - if you want to specify the uvs\n     * @param {Uint16Array} [indices] - if you want to specify the indices\n     * @param drawMode - the drawMode, can be any of the Mesh.DRAW_MODES consts\n     */\n    constructor(\n        texture: Texture = Texture.EMPTY,\n        vertices?: IArrayBuffer,\n        uvs?: IArrayBuffer,\n        indices?: IArrayBuffer,\n        drawMode?: DRAW_MODES\n    )\n    {\n        const geometry = new MeshGeometry(vertices, uvs, indices);\n\n        geometry.getBuffer('aVertexPosition').static = false;\n\n        const meshMaterial = new MeshMaterial(texture);\n\n        super(geometry, meshMaterial, null, drawMode);\n\n        this.autoUpdate = true;\n    }\n\n    /**\n     * Collection of vertices data.\n     * @type {Float32Array}\n     */\n    get vertices(): ITypedArray\n    {\n        return this.geometry.getBuffer('aVertexPosition').data;\n    }\n    set vertices(value: ITypedArray)\n    {\n        this.geometry.getBuffer('aVertexPosition').data = value;\n    }\n\n    _render(renderer: Renderer): void\n    {\n        if (this.autoUpdate)\n        {\n            this.geometry.getBuffer('aVertexPosition').update();\n        }\n\n        super._render(renderer);\n    }\n}\n"],"mappings":";;AAUO,MAAMA,UAAA,SAAmBC,IAChC;EAWIC,YAAA,EAOA;IAAA,IANIC,OAAmB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAAG,OAAA,CAAQC,KAAA;IAAA,IAC3BC,QACA,GAAAL,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAA,IAAAI,GAAA,GAAAN,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAA,IACAK,OAAA,GAAAP,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAA,IACAM,QAEJ,GAAAR,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IACI,MAAMO,QAAW,OAAIC,YAAa,CAAAL,QAAA,EAAUC,GAAA,EAAKC,OAAO;IAE/CE,QAAA,CAAAE,SAAA,CAAU,iBAAiB,EAAEC,MAAS;IAEzC,MAAAC,YAAA,GAAe,IAAIC,YAAA,CAAaf,OAAO;IAEvC,MAAAU,QAAA,EAAUI,YAAc,QAAML,QAAQ;IAE5C,KAAKO,UAAa;EAAA;EAOtB,IAAIV,QACJA,CAAA;IACI,OAAO,IAAK,CAAAI,QAAA,CAASE,SAAU,kBAAiB,CAAE,CAAAK,IAAA;EAAA;EAEtD,IAAIX,SAASY,KACb;IACI,KAAKR,QAAS,CAAAE,SAAA,CAAU,iBAAiB,EAAEK,IAAO,GAAAC,KAAA;EAAA;EAGtDC,QAAQC,QACR;IACI,IAAI,KAAKJ,UACT;MACI,KAAKN,QAAS,CAAAE,SAAA,CAAU,iBAAiB,EAAES,MAAO;IAAA;IAGtD,MAAMF,OAAA,CAAQC,QAAQ;EAAA;AAE9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}