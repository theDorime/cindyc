{"ast":null,"code":"import { PRECISION } from '@pixi/constants';\nimport { getTestContext } from './getTestContext.mjs';\nlet maxFragmentPrecision;\nfunction getMaxFragmentPrecision() {\n  if (!maxFragmentPrecision) {\n    maxFragmentPrecision = PRECISION.MEDIUM;\n    const gl = getTestContext();\n    if (gl) {\n      if (gl.getShaderPrecisionFormat) {\n        const shaderFragment = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n        maxFragmentPrecision = shaderFragment.precision ? PRECISION.HIGH : PRECISION.MEDIUM;\n      }\n    }\n  }\n  return maxFragmentPrecision;\n}\nexport { getMaxFragmentPrecision };","map":{"version":3,"names":["maxFragmentPrecision","getMaxFragmentPrecision","PRECISION","MEDIUM","gl","getTestContext","getShaderPrecisionFormat","shaderFragment","FRAGMENT_SHADER","HIGH_FLOAT","precision","HIGH"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\core\\src\\shader\\utils\\getMaxFragmentPrecision.ts"],"sourcesContent":["import { PRECISION } from '@pixi/constants';\nimport { getTestContext } from './getTestContext';\n\nlet maxFragmentPrecision: PRECISION;\n\nexport function getMaxFragmentPrecision(): PRECISION\n{\n    if (!maxFragmentPrecision)\n    {\n        maxFragmentPrecision = PRECISION.MEDIUM;\n        const gl = getTestContext();\n\n        if (gl)\n        {\n            if (gl.getShaderPrecisionFormat)\n            {\n                const shaderFragment = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n\n                maxFragmentPrecision = shaderFragment.precision ? PRECISION.HIGH : PRECISION.MEDIUM;\n            }\n        }\n    }\n\n    return maxFragmentPrecision;\n}\n"],"mappings":";;AAGA,IAAIA,oBAAA;AAGJ,SAAAC,wBAAA;EACI,IAAI,CAACD,oBACL;IACIA,oBAAA,GAAuBE,SAAU,CAAAC,MAAA;IACjC,MAAMC,EAAA,GAAKC,cAAe;IAE1B,IAAID,EACJ;MACI,IAAIA,EAAA,CAAGE,wBACP;QACI,MAAMC,cAAA,GAAiBH,EAAG,CAAAE,wBAAA,CAAyBF,EAAG,CAAAI,eAAA,EAAiBJ,EAAA,CAAGK,UAAU;QAEpFT,oBAAA,GAAuBO,cAAe,CAAAG,SAAA,GAAYR,SAAU,CAAAS,IAAA,GAAOT,SAAU,CAAAC,MAAA;MAAA;IACjF;EACJ;EAGG,OAAAH,oBAAA;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}