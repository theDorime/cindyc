{"ast":null,"code":"import { PRECISION } from '@pixi/constants';\nfunction setPrecision(src, requestedPrecision, maxSupportedPrecision) {\n  if (src.substring(0, 9) !== \"precision\") {\n    let precision = requestedPrecision;\n    if (requestedPrecision === PRECISION.HIGH && maxSupportedPrecision !== PRECISION.HIGH) {\n      precision = PRECISION.MEDIUM;\n    }\n    return `precision ${precision} float;\n${src}`;\n  } else if (maxSupportedPrecision !== PRECISION.HIGH && src.substring(0, 15) === \"precision highp\") {\n    return src.replace(\"precision highp\", \"precision mediump\");\n  }\n  return src;\n}\nexport { setPrecision };","map":{"version":3,"names":["setPrecision","src","requestedPrecision","maxSupportedPrecision","substring","precision","PRECISION","HIGH","MEDIUM","replace"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\core\\src\\shader\\utils\\setPrecision.ts"],"sourcesContent":["import { PRECISION } from '@pixi/constants';\n\n/**\n * Sets the float precision on the shader, ensuring the device supports the request precision.\n * If the precision is already present, it just ensures that the device is able to handle it.\n * @private\n * @param {string} src - The shader source\n * @param {PIXI.PRECISION} requestedPrecision - The request float precision of the shader.\n * @param {PIXI.PRECISION} maxSupportedPrecision - The maximum precision the shader supports.\n * @returns {string} modified shader source\n */\nexport function setPrecision(src: string, requestedPrecision: PRECISION, maxSupportedPrecision: PRECISION): string\n{\n    if (src.substring(0, 9) !== 'precision')\n    {\n        // no precision supplied, so PixiJS will add the requested level.\n        let precision = requestedPrecision;\n\n        // If highp is requested but not supported, downgrade precision to a level all devices support.\n        if (requestedPrecision === PRECISION.HIGH && maxSupportedPrecision !== PRECISION.HIGH)\n        {\n            precision = PRECISION.MEDIUM;\n        }\n\n        return `precision ${precision} float;\\n${src}`;\n    }\n    else if (maxSupportedPrecision !== PRECISION.HIGH && src.substring(0, 15) === 'precision highp')\n    {\n        // precision was supplied, but at a level this device does not support, so downgrading to mediump.\n        return src.replace('precision highp', 'precision mediump');\n    }\n\n    return src;\n}\n"],"mappings":";AAW6B,SAAAA,aAAAC,GAAA,EAAaC,kBAAA,EAA+BC,qBACzE;EACI,IAAIF,GAAI,CAAAG,SAAA,CAAU,CAAG,GAAC,MAAM,WAC5B;IAEI,IAAIC,SAAY,GAAAH,kBAAA;IAGhB,IAAIA,kBAAuB,KAAAI,SAAA,CAAUC,IAAQ,IAAAJ,qBAAA,KAA0BG,SAAA,CAAUC,IACjF;MACIF,SAAA,GAAYC,SAAU,CAAAE,MAAA;IAAA;IAG1B,OAAoB,aAAAH,SAAA;AAAA,EAAqBJ,GAAA;EAAA,CAC7C,UACSE,qBAAA,KAA0BG,SAAU,CAAAC,IAAA,IAAQN,GAAA,CAAIG,SAAU,IAAG,EAAE,MAAM,iBAC9E;IAEW,OAAAH,GAAA,CAAIQ,OAAQ,oBAAmB,mBAAmB;EAAA;EAGtD,OAAAR,GAAA;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}