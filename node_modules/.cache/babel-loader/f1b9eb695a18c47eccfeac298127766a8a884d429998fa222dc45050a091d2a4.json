{"ast":null,"code":"const warnings = {};\nfunction deprecation(version, message) {\n  let ignoreDepth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  if (warnings[message]) {\n    return;\n  }\n  let stack = new Error().stack;\n  if (typeof stack === \"undefined\") {\n    console.warn(\"PixiJS Deprecation Warning: \", `${message}\nDeprecated since v${version}`);\n  } else {\n    stack = stack.split(\"\\n\").splice(ignoreDepth).join(\"\\n\");\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\"%cPixiJS Deprecation Warning: %c%s\", \"color:#614108;background:#fffbe6\", \"font-weight:normal;color:#614108;background:#fffbe6\", `${message}\nDeprecated since v${version}`);\n      console.warn(stack);\n      console.groupEnd();\n    } else {\n      console.warn(\"PixiJS Deprecation Warning: \", `${message}\nDeprecated since v${version}`);\n      console.warn(stack);\n    }\n  }\n  warnings[message] = true;\n}\nexport { deprecation };","map":{"version":3,"names":["warnings","deprecation","version","message","ignoreDepth","arguments","length","undefined","stack","Error","console","warn","split","splice","join","groupCollapsed","groupEnd"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\utils\\src\\logging\\deprecation.ts"],"sourcesContent":["import type { Dict } from '../types';\n\n// A map of warning messages already fired\nconst warnings: Dict<boolean> = {};\n\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n * @memberof PIXI.utils\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\nexport function deprecation(version: string, message: string, ignoreDepth = 3): void\n{\n    // Ignore duplicat\n    if (warnings[message])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n    }\n    else\n    {\n        // chop off the stack trace which includes PixiJS internal calls\n        stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cPixiJS Deprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                `${message}\\nDeprecated since v${version}`\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[message] = true;\n}\n"],"mappings":"AAGA,MAAMA,QAAA,GAA0B,EAAC;AAaL,SAAAC,YAAAC,OAAA,EAAiBC,OAAiB,EAC9D;EAAA,IAD8DC,WAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAc,CAC5E;EAEI,IAAIL,QAAA,CAASG,OACb;IACI;EAAA;EAIA,IAAAK,KAAA,GAAQ,IAAIC,KAAA,EAAQ,CAAAD,KAAA;EAGpB,WAAOA,KAAA,KAAU,WACrB;IACYE,OAAA,CAAAC,IAAA,CAAK,gCAAmC,GAAAR,OAAA;AAAA,oBAA8BD,OAAS;EAAA,CAG3F;IAEYM,KAAA,GAAAA,KAAA,CAAMI,KAAA,CAAM,IAAI,EAAEC,MAAA,CAAOT,WAAW,EAAEU,IAAA,CAAK,IAAI;IAEvD,IAAIJ,OAAA,CAAQK,cACZ;MACIL,OAAA,CAAQK,cACJ,uCACA,kCACA,yDACG,GAAAZ,OAAA;AAAA,oBAA8BD,OACrC;MACAQ,OAAA,CAAQC,IAAA,CAAKH,KAAK;MAClBE,OAAA,CAAQM,QAAS;IAAA,CAGrB;MACYN,OAAA,CAAAC,IAAA,CAAK,gCAAmC,GAAAR,OAAA;AAAA,oBAA8BD,OAAS;MACvFQ,OAAA,CAAQC,IAAA,CAAKH,KAAK;IAAA;EACtB;EAIJR,QAAA,CAASG,OAAW;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}