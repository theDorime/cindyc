{"ast":null,"code":"import { TYPES } from '@pixi/constants';\nimport { Buffer } from '../geometry/Buffer.mjs';\nimport { Geometry } from '../geometry/Geometry.mjs';\nclass BatchGeometry extends Geometry {\n  constructor() {\n    let _static = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    super();\n    this._buffer = new Buffer(null, _static, false);\n    this._indexBuffer = new Buffer(null, _static, true);\n    this.addAttribute(\"aVertexPosition\", this._buffer, 2, false, TYPES.FLOAT).addAttribute(\"aTextureCoord\", this._buffer, 2, false, TYPES.FLOAT).addAttribute(\"aColor\", this._buffer, 4, true, TYPES.UNSIGNED_BYTE).addAttribute(\"aTextureId\", this._buffer, 1, true, TYPES.FLOAT).addIndex(this._indexBuffer);\n  }\n}\nexport { BatchGeometry };","map":{"version":3,"names":["BatchGeometry","Geometry","constructor","_static","arguments","length","undefined","_buffer","Buffer","_indexBuffer","addAttribute","TYPES","FLOAT","UNSIGNED_BYTE","addIndex"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\core\\src\\batch\\BatchGeometry.ts"],"sourcesContent":["import { TYPES } from '@pixi/constants';\nimport { Buffer } from '../geometry/Buffer';\nimport { Geometry } from '../geometry/Geometry';\n\n/**\n * Geometry used to batch standard PIXI content (e.g. Mesh, Sprite, Graphics objects).\n * @memberof PIXI\n */\nexport class BatchGeometry extends Geometry\n{\n    /**\n     * Buffer used for position, color, texture IDs\n     * @protected\n     */\n    _buffer: Buffer;\n\n    /**\n     * Index buffer data\n     * @protected\n     */\n    _indexBuffer: Buffer;\n\n    /**\n     * @param {boolean} [_static=false] - Optimization flag, where `false`\n     *        is updated every frame, `true` doesn't change frame-to-frame.\n     */\n    constructor(_static = false)\n    {\n        super();\n\n        this._buffer = new Buffer(null, _static, false);\n\n        this._indexBuffer = new Buffer(null, _static, true);\n\n        this.addAttribute('aVertexPosition', this._buffer, 2, false, TYPES.FLOAT)\n            .addAttribute('aTextureCoord', this._buffer, 2, false, TYPES.FLOAT)\n            .addAttribute('aColor', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\n            .addAttribute('aTextureId', this._buffer, 1, true, TYPES.FLOAT)\n            .addIndex(this._indexBuffer);\n    }\n}\n"],"mappings":";;;AAQO,MAAMA,aAAA,SAAsBC,QACnC;EAiBIC,YAAA,EACA;IAAA,IADYC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAU,KACtB;IACU;IAEN,KAAKG,OAAU,OAAIC,MAAO,OAAML,OAAA,EAAS,KAAK;IAE9C,KAAKM,YAAe,OAAID,MAAO,OAAML,OAAA,EAAS,IAAI;IAElD,KAAKO,YAAA,CAAa,iBAAmB,OAAKH,OAAS,KAAG,OAAOI,KAAM,CAAAC,KAAK,CACnE,CAAAF,YAAA,CAAa,iBAAiB,IAAK,CAAAH,OAAA,EAAS,GAAG,KAAO,EAAAI,KAAA,CAAMC,KAAK,CACjE,CAAAF,YAAA,CAAa,QAAU,OAAKH,OAAA,EAAS,CAAG,QAAMI,KAAM,CAAAE,aAAa,EACjEH,YAAa,eAAc,IAAK,CAAAH,OAAA,EAAS,GAAG,IAAM,EAAAI,KAAA,CAAMC,KAAK,CAC7D,CAAAE,QAAA,CAAS,KAAKL,YAAY;EAAA;AAEvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}