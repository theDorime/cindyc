{"ast":null,"code":"import { MSAA_QUALITY } from '@pixi/constants';\nimport { ExtensionType, extensions } from '@pixi/extensions';\nclass MultisampleSystem {\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n  contextChange(gl) {\n    let samples;\n    if (this.renderer.context.webGLVersion === 1) {\n      const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      samples = gl.getParameter(gl.SAMPLES);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    } else {\n      const framebuffer = gl.getParameter(gl.DRAW_FRAMEBUFFER_BINDING);\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n      samples = gl.getParameter(gl.SAMPLES);\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, framebuffer);\n    }\n    if (samples >= MSAA_QUALITY.HIGH) {\n      this.multisample = MSAA_QUALITY.HIGH;\n    } else if (samples >= MSAA_QUALITY.MEDIUM) {\n      this.multisample = MSAA_QUALITY.MEDIUM;\n    } else if (samples >= MSAA_QUALITY.LOW) {\n      this.multisample = MSAA_QUALITY.LOW;\n    } else {\n      this.multisample = MSAA_QUALITY.NONE;\n    }\n  }\n  destroy() {}\n}\nMultisampleSystem.extension = {\n  type: ExtensionType.RendererSystem,\n  name: \"_multisample\"\n};\nextensions.add(MultisampleSystem);\nexport { MultisampleSystem };","map":{"version":3,"names":["MultisampleSystem","constructor","renderer","contextChange","gl","samples","context","webGLVersion","framebuffer","getParameter","FRAMEBUFFER_BINDING","bindFramebuffer","FRAMEBUFFER","SAMPLES","DRAW_FRAMEBUFFER_BINDING","DRAW_FRAMEBUFFER","MSAA_QUALITY","HIGH","multisample","MEDIUM","LOW","NONE","destroy","extension","type","ExtensionType","RendererSystem","name","extensions","add"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\core\\src\\framebuffer\\MultisampleSystem.ts"],"sourcesContent":["import { MSAA_QUALITY } from '@pixi/constants';\nimport { extensions, ExtensionType } from '@pixi/extensions';\n\nimport type { ExtensionMetadata } from '@pixi/extensions';\nimport type { IRenderingContext } from '../IRenderer';\nimport type { Renderer } from '../Renderer';\nimport type { ISystem } from '../system/ISystem';\n\n/**\n * System that manages the multisample property on the WebGL renderer\n * @memberof PIXI\n */\nexport class MultisampleSystem implements ISystem\n{\n    /** @ignore */\n    static extension: ExtensionMetadata = {\n        type: ExtensionType.RendererSystem,\n        name: '_multisample',\n    };\n\n    /**\n     * The number of msaa samples of the canvas.\n     * @readonly\n     */\n    public multisample: MSAA_QUALITY;\n\n    private renderer: Renderer;\n\n    constructor(renderer: Renderer)\n    {\n        this.renderer = renderer;\n    }\n\n    protected contextChange(gl: IRenderingContext): void\n    {\n        let samples;\n\n        if (this.renderer.context.webGLVersion === 1)\n        {\n            const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n            samples = gl.getParameter(gl.SAMPLES);\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        }\n        else\n        {\n            const framebuffer = gl.getParameter(gl.DRAW_FRAMEBUFFER_BINDING);\n\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n\n            samples = gl.getParameter(gl.SAMPLES);\n\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, framebuffer);\n        }\n\n        if (samples >= MSAA_QUALITY.HIGH)\n        {\n            this.multisample = MSAA_QUALITY.HIGH;\n        }\n        else if (samples >= MSAA_QUALITY.MEDIUM)\n        {\n            this.multisample = MSAA_QUALITY.MEDIUM;\n        }\n        else if (samples >= MSAA_QUALITY.LOW)\n        {\n            this.multisample = MSAA_QUALITY.LOW;\n        }\n        else\n        {\n            this.multisample = MSAA_QUALITY.NONE;\n        }\n    }\n\n    destroy(): void\n    {\n        // ka boom!\n    }\n}\n\nextensions.add(MultisampleSystem);\n"],"mappings":";;AAYO,MAAMA,iBACb;EAeIC,YAAYC,QACZ;IACI,KAAKA,QAAW,GAAAA,QAAA;EAAA;EAGVC,cAAcC,EACxB;IACQ,IAAAC,OAAA;IAEJ,IAAI,IAAK,CAAAH,QAAA,CAASI,OAAQ,CAAAC,YAAA,KAAiB,CAC3C;MACI,MAAMC,WAAc,GAAAJ,EAAA,CAAGK,YAAa,CAAAL,EAAA,CAAGM,mBAAmB;MAEvDN,EAAA,CAAAO,eAAA,CAAgBP,EAAG,CAAAQ,WAAA,EAAa,IAAI;MAE7BP,OAAA,GAAAD,EAAA,CAAGK,YAAa,CAAAL,EAAA,CAAGS,OAAO;MAEjCT,EAAA,CAAAO,eAAA,CAAgBP,EAAG,CAAAQ,WAAA,EAAaJ,WAAW;IAAA,CAGlD;MACI,MAAMA,WAAc,GAAAJ,EAAA,CAAGK,YAAa,CAAAL,EAAA,CAAGU,wBAAwB;MAE5DV,EAAA,CAAAO,eAAA,CAAgBP,EAAG,CAAAW,gBAAA,EAAkB,IAAI;MAElCV,OAAA,GAAAD,EAAA,CAAGK,YAAa,CAAAL,EAAA,CAAGS,OAAO;MAEjCT,EAAA,CAAAO,eAAA,CAAgBP,EAAG,CAAAW,gBAAA,EAAkBP,WAAW;IAAA;IAGnD,IAAAH,OAAA,IAAWW,YAAA,CAAaC,IAC5B;MACI,KAAKC,WAAA,GAAcF,YAAa,CAAAC,IAAA;IAAA,CACpC,UACSZ,OAAW,IAAAW,YAAA,CAAaG,MACjC;MACI,KAAKD,WAAA,GAAcF,YAAa,CAAAG,MAAA;IAAA,CACpC,UACSd,OAAW,IAAAW,YAAA,CAAaI,GACjC;MACI,KAAKF,WAAA,GAAcF,YAAa,CAAAI,GAAA;IAAA,CAGpC;MACI,KAAKF,WAAA,GAAcF,YAAa,CAAAK,IAAA;IAAA;EACpC;EAGJC,OACAA,CAAA;AAGJ;AApEatB,iBAAA,CAGFuB,SAA+B;EAClCC,IAAA,EAAMC,aAAc,CAAAC,cAAA;EACpBC,IAAM;AACV;AAgEJC,UAAA,CAAWC,GAAA,CAAI7B,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}