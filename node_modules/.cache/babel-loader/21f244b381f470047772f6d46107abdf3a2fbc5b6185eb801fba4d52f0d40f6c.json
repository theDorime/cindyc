{"ast":null,"code":"import { ExtensionType, settings, extensions } from '@pixi/core';\nimport '../../loader/index.mjs';\nimport { loadTextures } from '../../loader/parsers/textures/loadTextures.mjs';\nconst resolveTextureUrl = {\n  extension: ExtensionType.ResolveParser,\n  test: loadTextures.test,\n  parse: value => ({\n    resolution: parseFloat(settings.RETINA_PREFIX.exec(value)?.[1] ?? \"1\"),\n    format: value.split(\".\").pop(),\n    src: value\n  })\n};\nextensions.add(resolveTextureUrl);\nexport { resolveTextureUrl };","map":{"version":3,"names":["resolveTextureUrl","extension","ExtensionType","ResolveParser","test","loadTextures","parse","value","resolution","parseFloat","settings","RETINA_PREFIX","exec","format","split","pop","src","extensions","add"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\assets\\src\\resolver\\parsers\\resolveTextureUrl.ts"],"sourcesContent":["import { extensions, ExtensionType, settings } from '@pixi/core';\nimport { loadTextures } from '../../loader';\n\nimport type { ResolveAsset, ResolveURLParser } from '../types';\n\nexport const resolveTextureUrl = {\n    extension: ExtensionType.ResolveParser,\n    test: loadTextures.test,\n    parse: (value: string): ResolveAsset =>\n        ({\n            resolution: parseFloat(settings.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n            format: value.split('.').pop(),\n            src: value,\n        }),\n} as ResolveURLParser;\n\nextensions.add(resolveTextureUrl);\n"],"mappings":";;;AAKO,MAAMA,iBAAoB;EAC7BC,SAAA,EAAWC,aAAc,CAAAC,aAAA;EACzBC,IAAA,EAAMC,YAAa,CAAAD,IAAA;EACnBE,KAAA,EAAQC,KACH;IACGC,UAAA,EAAYC,UAAA,CAAWC,QAAS,CAAAC,aAAA,CAAcC,IAAA,CAAKL,KAAK,IAAI,MAAM,GAAG;IACrEM,MAAQ,EAAAN,KAAA,CAAMO,KAAM,IAAG,EAAEC,GAAI;IAC7BC,GAAK,EAAAT;EAAA,CACT;AACR;AAEAU,UAAA,CAAWC,GAAA,CAAIlB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}