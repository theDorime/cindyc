{"ast":null,"code":"import { Runner } from '@pixi/runner';\nclass TransformFeedback {\n  constructor() {\n    this._glTransformFeedbacks = {};\n    this.buffers = [];\n    this.disposeRunner = new Runner(\"disposeTransformFeedback\");\n  }\n  bindBuffer(index, buffer) {\n    this.buffers[index] = buffer;\n  }\n  destroy() {\n    this.disposeRunner.emit(this, false);\n  }\n}\nexport { TransformFeedback };","map":{"version":3,"names":["TransformFeedback","constructor","_glTransformFeedbacks","buffers","disposeRunner","Runner","bindBuffer","index","buffer","destroy","emit"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\core\\src\\transformFeedback\\TransformFeedback.ts"],"sourcesContent":["import { Runner } from '@pixi/runner';\n\nimport type { Buffer } from '../geometry/Buffer';\n\n/**\n * A TransformFeedback object wrapping GLTransformFeedback object.\n *\n * For example you can use TransformFeedback object to feed-back buffer data from Shader having TransformFeedbackVaryings.\n * @memberof PIXI\n */\nexport class TransformFeedback\n{\n    _glTransformFeedbacks: {[key: number]: WebGLTransformFeedback};\n\n    buffers: Buffer[];\n\n    disposeRunner: Runner;\n\n    constructor()\n    {\n        this._glTransformFeedbacks = {};\n        this.buffers = [];\n        this.disposeRunner = new Runner('disposeTransformFeedback');\n    }\n\n    /**\n     * Bind buffer to TransformFeedback\n     * @param index - index to bind\n     * @param buffer - buffer to bind\n     */\n    bindBuffer(index: number, buffer: Buffer)\n    {\n        this.buffers[index] = buffer;\n    }\n\n    /** Destroy WebGL resources that are connected to this TransformFeedback. */\n    destroy(): void\n    {\n        this.disposeRunner.emit(this, false);\n    }\n}\n"],"mappings":";AAUO,MAAMA,iBACb;EAOIC,WACAA,CAAA;IACI,KAAKC,qBAAA,GAAwB,EAAC;IAC9B,KAAKC,OAAA,GAAU,EAAC;IACX,KAAAC,aAAA,GAAgB,IAAIC,MAAA,CAAO,0BAA0B;EAAA;EAQ9DC,WAAWC,KAAA,EAAeC,MAC1B;IACI,KAAKL,OAAA,CAAQI,KAAS,IAAAC,MAAA;EAAA;EAI1BC,OACAA,CAAA;IACS,KAAAL,aAAA,CAAcM,IAAK,OAAM,KAAK;EAAA;AAE3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}