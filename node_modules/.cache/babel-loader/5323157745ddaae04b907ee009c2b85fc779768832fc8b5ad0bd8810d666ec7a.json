{"ast":null,"code":"import { ENV } from '@pixi/constants';\nimport { settings } from '@pixi/settings';\nconst unknownContext = {};\nlet context = unknownContext;\nfunction getTestContext() {\n  if (context === unknownContext || context?.isContextLost()) {\n    const canvas = settings.ADAPTER.createCanvas();\n    let gl;\n    if (settings.PREFER_ENV >= ENV.WEBGL2) {\n      gl = canvas.getContext(\"webgl2\", {});\n    }\n    if (!gl) {\n      gl = canvas.getContext(\"webgl\", {}) || canvas.getContext(\"experimental-webgl\", {});\n      if (!gl) {\n        gl = null;\n      } else {\n        gl.getExtension(\"WEBGL_draw_buffers\");\n      }\n    }\n    context = gl;\n  }\n  return context;\n}\nexport { getTestContext };","map":{"version":3,"names":["unknownContext","context","getTestContext","isContextLost","canvas","settings","ADAPTER","createCanvas","gl","PREFER_ENV","ENV","WEBGL2","getContext","getExtension"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\core\\src\\shader\\utils\\getTestContext.ts"],"sourcesContent":["import { ENV } from '@pixi/constants';\nimport { settings } from '@pixi/settings';\n\nconst unknownContext = {};\nlet context: WebGLRenderingContext | WebGL2RenderingContext = unknownContext as any;\n\n/**\n * returns a little WebGL context to use for program inspection.\n * @static\n * @private\n * @returns {WebGLRenderingContext} a gl context to test with\n */\nexport function getTestContext(): WebGLRenderingContext | WebGL2RenderingContext\n{\n    if (context === unknownContext || context?.isContextLost())\n    {\n        const canvas = settings.ADAPTER.createCanvas();\n\n        let gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n        if (settings.PREFER_ENV >= ENV.WEBGL2)\n        {\n            gl = canvas.getContext('webgl2', {});\n        }\n\n        if (!gl)\n        {\n            gl = (canvas.getContext('webgl', {})\n                || (canvas.getContext('experimental-webgl', {}) as WebGLRenderingContext));\n\n            if (!gl)\n            {\n                // fail, not able to get a context\n                gl = null;\n            }\n            else\n            {\n                // for shader testing..\n                gl.getExtension('WEBGL_draw_buffers');\n            }\n        }\n\n        context = gl;\n    }\n\n    return context;\n}\n"],"mappings":";;AAGA,MAAMA,cAAA,GAAiB,EAAC;AACxB,IAAIC,OAA0D,GAAAD,cAAA;AAS9D,SAAAE,eAAA;EACI,IAAID,OAAY,KAAAD,cAAA,IAAkBC,OAAS,EAAAE,aAAA,EAC3C;IACU,MAAAC,MAAA,GAASC,QAAS,CAAAC,OAAA,CAAQC,YAAa;IAEzC,IAAAC,EAAA;IAEA,IAAAH,QAAA,CAASI,UAAc,IAAAC,GAAA,CAAIC,MAC/B;MACIH,EAAA,GAAKJ,MAAO,CAAAQ,UAAA,CAAW,QAAU,IAAE;IAAA;IAGvC,IAAI,CAACJ,EACL;MACUA,EAAA,GAAAJ,MAAA,CAAOQ,UAAW,UAAS,EAAE,KAC3BR,MAAO,CAAAQ,UAAA,CAAW,oBAAsB,IAAE;MAElD,IAAI,CAACJ,EACL;QAESA,EAAA;MAAA,CAGT;QAEIA,EAAA,CAAGK,YAAA,CAAa,oBAAoB;MAAA;IACxC;IAGMZ,OAAA,GAAAO,EAAA;EAAA;EAGP,OAAAP,OAAA;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}