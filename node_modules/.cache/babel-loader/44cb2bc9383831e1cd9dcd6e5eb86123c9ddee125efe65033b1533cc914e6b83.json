{"ast":null,"code":"import { MSAA_QUALITY } from '@pixi/constants';\nimport { Rectangle } from '@pixi/math';\nclass FilterState {\n  constructor() {\n    this.renderTexture = null;\n    this.target = null;\n    this.legacy = false;\n    this.resolution = 1;\n    this.multisample = MSAA_QUALITY.NONE;\n    this.sourceFrame = new Rectangle();\n    this.destinationFrame = new Rectangle();\n    this.bindingSourceFrame = new Rectangle();\n    this.bindingDestinationFrame = new Rectangle();\n    this.filters = [];\n    this.transform = null;\n  }\n  clear() {\n    this.target = null;\n    this.filters = null;\n    this.renderTexture = null;\n  }\n}\nexport { FilterState };","map":{"version":3,"names":["FilterState","constructor","renderTexture","target","legacy","resolution","multisample","MSAA_QUALITY","NONE","sourceFrame","Rectangle","destinationFrame","bindingSourceFrame","bindingDestinationFrame","filters","transform","clear"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\core\\src\\filters\\FilterState.ts"],"sourcesContent":["import { MSAA_QUALITY } from '@pixi/constants';\nimport { Rectangle } from '@pixi/math';\n\nimport type { Matrix } from '@pixi/math';\nimport type { RenderTexture } from '../renderTexture/RenderTexture';\nimport type { Filter } from './Filter';\nimport type { IFilterTarget } from './IFilterTarget';\n\n/**\n * System plugin to the renderer to manage filter states.\n * @ignore\n */\nexport class FilterState\n{\n    renderTexture: RenderTexture;\n\n    /**\n     * Target of the filters\n     * We store for case when custom filter wants to know the element it was applied on\n     * @member {PIXI.DisplayObject}\n     */\n    target: IFilterTarget;\n\n    /**\n     * Compatibility with PixiJS v4 filters\n     * @default false\n     */\n    legacy: boolean;\n\n    /**\n     * Resolution of filters\n     * @default 1\n     */\n    resolution: number;\n\n    /**\n     * Number of samples\n     * @default MSAA_QUALITY.NONE\n     */\n    multisample: MSAA_QUALITY;\n\n    /** Source frame. */\n    sourceFrame: Rectangle;\n\n    /** Destination frame. */\n    destinationFrame: Rectangle;\n\n    /** Original render-target source frame. */\n    bindingSourceFrame: Rectangle;\n\n    /** Original render-target destination frame. */\n    bindingDestinationFrame: Rectangle;\n\n    /** Collection of filters. */\n    filters: Array<Filter>;\n\n    /** Projection system transform saved by link. */\n    transform: Matrix;\n\n    constructor()\n    {\n        this.renderTexture = null;\n\n        this.target = null;\n        this.legacy = false;\n        this.resolution = 1;\n        this.multisample = MSAA_QUALITY.NONE;\n\n        // next three fields are created only for root\n        // re-assigned for everything else\n\n        this.sourceFrame = new Rectangle();\n        this.destinationFrame = new Rectangle();\n        this.bindingSourceFrame = new Rectangle();\n        this.bindingDestinationFrame = new Rectangle();\n        this.filters = [];\n        this.transform = null;\n    }\n\n    /** Clears the state */\n    clear(): void\n    {\n        this.target = null;\n        this.filters = null;\n        this.renderTexture = null;\n    }\n}\n"],"mappings":";;AAYO,MAAMA,WACb;EA8CIC,WACAA,CAAA;IACI,KAAKC,aAAgB;IAErB,KAAKC,MAAS;IACd,KAAKC,MAAS;IACd,KAAKC,UAAa;IAClB,KAAKC,WAAA,GAAcC,YAAa,CAAAC,IAAA;IAK3B,KAAAC,WAAA,GAAc,IAAIC,SAAU;IAC5B,KAAAC,gBAAA,GAAmB,IAAID,SAAU;IACjC,KAAAE,kBAAA,GAAqB,IAAIF,SAAU;IACnC,KAAAG,uBAAA,GAA0B,IAAIH,SAAU;IAC7C,KAAKI,OAAA,GAAU,EAAC;IAChB,KAAKC,SAAY;EAAA;EAIrBC,KACAA,CAAA;IACI,KAAKb,MAAS;IACd,KAAKW,OAAU;IACf,KAAKZ,aAAgB;EAAA;AAE7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}