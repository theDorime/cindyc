{"ast":null,"code":"class GraphicsData {\n  constructor(shape) {\n    let fillStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let lineStyle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let matrix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    this.points = [];\n    this.holes = [];\n    this.shape = shape;\n    this.lineStyle = lineStyle;\n    this.fillStyle = fillStyle;\n    this.matrix = matrix;\n    this.type = shape.type;\n  }\n  clone() {\n    return new GraphicsData(this.shape, this.fillStyle, this.lineStyle, this.matrix);\n  }\n  destroy() {\n    this.shape = null;\n    this.holes.length = 0;\n    this.holes = null;\n    this.points.length = 0;\n    this.points = null;\n    this.lineStyle = null;\n    this.fillStyle = null;\n  }\n}\nexport { GraphicsData };","map":{"version":3,"names":["GraphicsData","constructor","shape","fillStyle","arguments","length","undefined","lineStyle","matrix","points","holes","type","clone","destroy"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\graphics\\src\\GraphicsData.ts"],"sourcesContent":["import type { IShape, Matrix, SHAPES } from '@pixi/core';\nimport type { FillStyle } from './styles/FillStyle';\nimport type { LineStyle } from './styles/LineStyle';\n\n/**\n * A class to contain data useful for Graphics objects\n * @memberof PIXI\n */\nexport class GraphicsData\n{\n    /**\n     * The shape object to draw.\n     * @member {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle}\n     */\n    shape: IShape;\n\n    /** The style of the line. */\n    lineStyle: LineStyle;\n\n    /** The style of the fill. */\n    fillStyle: FillStyle;\n\n    /** The transform matrix. */\n    matrix: Matrix;\n\n    /** The type of the shape, see the Const.Shapes file for all the existing types, */\n    type: SHAPES;\n\n    /** The collection of points. */\n    points: number[] = [];\n\n    /** The collection of holes. */\n\n    holes: Array<GraphicsData> = [];\n\n    /**\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - The shape object to draw.\n     * @param fillStyle - the width of the line to draw\n     * @param lineStyle - the color of the line to draw\n     * @param matrix - Transform matrix\n     */\n    constructor(shape: IShape, fillStyle: FillStyle = null, lineStyle: LineStyle = null, matrix: Matrix = null)\n    {\n        this.shape = shape;\n        this.lineStyle = lineStyle;\n        this.fillStyle = fillStyle;\n        this.matrix = matrix;\n        this.type = shape.type;\n    }\n\n    /**\n     * Creates a new GraphicsData object with the same values as this one.\n     * @returns - Cloned GraphicsData object\n     */\n    public clone(): GraphicsData\n    {\n        return new GraphicsData(\n            this.shape,\n            this.fillStyle,\n            this.lineStyle,\n            this.matrix\n        );\n    }\n\n    /** Destroys the Graphics data. */\n    public destroy(): void\n    {\n        this.shape = null;\n        this.holes.length = 0;\n        this.holes = null;\n        this.points.length = 0;\n        this.points = null;\n        this.lineStyle = null;\n        this.fillStyle = null;\n    }\n}\n"],"mappings":"AAQO,MAAMA,YACb;EAgCIC,YAAYC,KAAe,EAC3B;IAAA,IAD2BC,SAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAuB;IAAA,IAAMG,SAAuB,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;IAAA,IAAMI,MAAA,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,IACtG;IAbA,KAAAK,MAAA,GAAmB,EAAC;IAIpB,KAAAC,KAAA,GAA6B,EAAC;IAU1B,KAAKR,KAAQ,GAAAA,KAAA;IACb,KAAKK,SAAY,GAAAA,SAAA;IACjB,KAAKJ,SAAY,GAAAA,SAAA;IACjB,KAAKK,MAAS,GAAAA,MAAA;IACd,KAAKG,IAAA,GAAOT,KAAM,CAAAS,IAAA;EAAA;EAOtBC,KACAA,CAAA;IACW,WAAIZ,YAAA,CACP,IAAK,CAAAE,KAAA,EACL,KAAKC,SACL,OAAKI,SACL,OAAKC,MACT;EAAA;EAIJK,OACAA,CAAA;IACI,KAAKX,KAAQ;IACb,KAAKQ,KAAA,CAAML,MAAS;IACpB,KAAKK,KAAQ;IACb,KAAKD,MAAA,CAAOJ,MAAS;IACrB,KAAKI,MAAS;IACd,KAAKF,SAAY;IACjB,KAAKJ,SAAY;EAAA;AAEzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}