{"ast":null,"code":"import '../settings.mjs';\nimport { settings } from '@pixi/settings';\nlet supported;\nfunction isWebGLSupported() {\n  if (typeof supported === \"undefined\") {\n    supported = function supported2() {\n      const contextOptions = {\n        stencil: true,\n        failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n      };\n      try {\n        if (!settings.ADAPTER.getWebGLRenderingContext()) {\n          return false;\n        }\n        const canvas = settings.ADAPTER.createCanvas();\n        let gl = canvas.getContext(\"webgl\", contextOptions) || canvas.getContext(\"experimental-webgl\", contextOptions);\n        const success = !!gl?.getContextAttributes()?.stencil;\n        if (gl) {\n          const loseContext = gl.getExtension(\"WEBGL_lose_context\");\n          if (loseContext) {\n            loseContext.loseContext();\n          }\n        }\n        gl = null;\n        return success;\n      } catch (e) {\n        return false;\n      }\n    }();\n  }\n  return supported;\n}\nexport { isWebGLSupported };","map":{"version":3,"names":["supported","isWebGLSupported","supported2","contextOptions","stencil","failIfMajorPerformanceCaveat","settings","FAIL_IF_MAJOR_PERFORMANCE_CAVEAT","ADAPTER","getWebGLRenderingContext","canvas","createCanvas","gl","getContext","success","getContextAttributes","loseContext","getExtension","e"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\utils\\src\\browser\\isWebGLSupported.ts"],"sourcesContent":["import { settings } from '../settings';\n\nlet supported: boolean | undefined;\n\n/**\n * Helper for checking for WebGL support.\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @returns {boolean} Is WebGL supported.\n */\nexport function isWebGLSupported(): boolean\n{\n    if (typeof supported === 'undefined')\n    {\n        supported = (function supported(): boolean\n        {\n            const contextOptions = {\n                stencil: true,\n                failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT,\n            };\n\n            try\n            {\n                if (!settings.ADAPTER.getWebGLRenderingContext())\n                {\n                    return false;\n                }\n\n                const canvas = settings.ADAPTER.createCanvas();\n                let gl = (\n                    canvas.getContext('webgl', contextOptions)\n                    || canvas.getContext('experimental-webgl', contextOptions)\n                ) as WebGLRenderingContext | null;\n\n                const success = !!gl?.getContextAttributes()?.stencil;\n\n                if (gl)\n                {\n                    const loseContext = gl.getExtension('WEBGL_lose_context');\n\n                    if (loseContext)\n                    {\n                        loseContext.loseContext();\n                    }\n                }\n\n                gl = null;\n\n                return success;\n            }\n            catch (e)\n            {\n                return false;\n            }\n        })();\n    }\n\n    return supported;\n}\n"],"mappings":";;AAEA,IAAIA,SAAA;AASJ,SAAAC,iBAAA;EACQ,WAAOD,SAAA,KAAc,WACzB;IACIA,SAAA,GAAa,SACbE,WAAA;MACI,MAAMC,cAAiB;QACnBC,OAAS;QACTC,4BAAA,EAA8BC,QAAS,CAAAC;MAAA,CAC3C;MAGA;QACI,IAAI,CAACD,QAAA,CAASE,OAAQ,CAAAC,wBAAA,EACtB;UACW;QAAA;QAGL,MAAAC,MAAA,GAASJ,QAAS,CAAAE,OAAA,CAAQG,YAAa;QACzC,IAAAC,EAAA,GACAF,MAAA,CAAOG,UAAW,UAASV,cAAc,CACtC,IAAAO,MAAA,CAAOG,UAAW,uBAAsBV,cAAc;QAG7D,MAAMW,OAAU,IAAC,CAACF,EAAA,EAAIG,oBAAA,EAAwB,EAAAX,OAAA;QAE9C,IAAIQ,EACJ;UACU,MAAAI,WAAA,GAAcJ,EAAG,CAAAK,YAAA,CAAa,oBAAoB;UAExD,IAAID,WACJ;YACIA,WAAA,CAAYA,WAAY;UAAA;QAC5B;QAGCJ,EAAA;QAEE,OAAAE,OAAA;MAAA,SAEJI,CAAP;QAEW;MAAA;IACX,CACD;EAAA;EAGA,OAAAlB,SAAA;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}