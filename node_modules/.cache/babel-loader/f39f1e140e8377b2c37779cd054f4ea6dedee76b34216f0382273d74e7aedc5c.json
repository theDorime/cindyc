{"ast":null,"code":"class Runner {\n  constructor(name) {\n    this.items = [];\n    this._name = name;\n    this._aliasCount = 0;\n  }\n  emit(a0, a1, a2, a3, a4, a5, a6, a7) {\n    if (arguments.length > 8) {\n      throw new Error(\"max arguments reached\");\n    }\n    const {\n      name,\n      items\n    } = this;\n    this._aliasCount++;\n    for (let i = 0, len = items.length; i < len; i++) {\n      items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    if (items === this.items) {\n      this._aliasCount--;\n    }\n    return this;\n  }\n  ensureNonAliasedItems() {\n    if (this._aliasCount > 0 && this.items.length > 1) {\n      this._aliasCount = 0;\n      this.items = this.items.slice(0);\n    }\n  }\n  add(item) {\n    if (item[this._name]) {\n      this.ensureNonAliasedItems();\n      this.remove(item);\n      this.items.push(item);\n    }\n    return this;\n  }\n  remove(item) {\n    const index = this.items.indexOf(item);\n    if (index !== -1) {\n      this.ensureNonAliasedItems();\n      this.items.splice(index, 1);\n    }\n    return this;\n  }\n  contains(item) {\n    return this.items.includes(item);\n  }\n  removeAll() {\n    this.ensureNonAliasedItems();\n    this.items.length = 0;\n    return this;\n  }\n  destroy() {\n    this.removeAll();\n    this.items = null;\n    this._name = null;\n  }\n  get empty() {\n    return this.items.length === 0;\n  }\n  get name() {\n    return this._name;\n  }\n}\nObject.defineProperties(Runner.prototype, {\n  dispatch: {\n    value: Runner.prototype.emit\n  },\n  run: {\n    value: Runner.prototype.emit\n  }\n});\nexport { Runner };","map":{"version":3,"names":["Runner","constructor","name","items","_name","_aliasCount","emit","a0","a1","a2","a3","a4","a5","a6","a7","arguments","length","Error","i","len","ensureNonAliasedItems","slice","add","item","remove","push","index","indexOf","splice","contains","includes","removeAll","destroy","empty","Object","defineProperties","prototype","dispatch","value","run"],"sources":["C:\\Users\\cheng\\OneDrive\\Desktop\\site\\cindyjcheng.github.io\\node_modules\\@pixi\\runner\\src\\Runner.ts"],"sourcesContent":["/**\n * A Runner is a highly performant and simple alternative to signals. Best used in situations\n * where events are dispatched to many objects at high frequency (say every frame!)\n *\n * Like a signal:\n *\n * ```js\n * import { Runner } from '@pixi/runner';\n *\n * const myObject = {\n *     loaded: new Runner('loaded'),\n * };\n *\n * const listener = {\n *     loaded: function() {\n *         // Do something when loaded\n *     }\n * };\n *\n * myObject.loaded.add(listener);\n *\n * myObject.loaded.emit();\n * ```\n *\n * Or for handling calling the same function on many items:\n *\n * ```js\n * import { Runner } from '@pixi/runner';\n *\n * const myGame = {\n *     update: new Runner('update'),\n * };\n *\n * const gameObject = {\n *     update: function(time) {\n *         // Update my gamey state\n *     },\n * };\n *\n * myGame.update.add(gameObject);\n *\n * myGame.update.emit(time);\n * ```\n * @memberof PIXI\n */\nexport class Runner\n{\n    public items: any[];\n    private _name: string;\n    private _aliasCount: number;\n\n    /**\n     * @param name - The function name that will be executed on the listeners added to this Runner.\n     */\n    constructor(name: string)\n    {\n        this.items = [];\n        this._name = name;\n        this._aliasCount = 0;\n    }\n\n    /* eslint-disable jsdoc/require-param, jsdoc/check-param-names */\n    /**\n     * Dispatch/Broadcast Runner to all listeners added to the queue.\n     * @param {...any} params - (optional) parameters to pass to each listener\n     */\n    /*  eslint-enable jsdoc/require-param, jsdoc/check-param-names */\n    public emit(a0?: unknown, a1?: unknown, a2?: unknown, a3?: unknown,\n        a4?: unknown, a5?: unknown, a6?: unknown, a7?: unknown): this\n    {\n        if (arguments.length > 8)\n        {\n            throw new Error('max arguments reached');\n        }\n\n        const { name, items } = this;\n\n        this._aliasCount++;\n\n        for (let i = 0, len = items.length; i < len; i++)\n        {\n            items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);\n        }\n\n        if (items === this.items)\n        {\n            this._aliasCount--;\n        }\n\n        return this;\n    }\n\n    private ensureNonAliasedItems(): void\n    {\n        if (this._aliasCount > 0 && this.items.length > 1)\n        {\n            this._aliasCount = 0;\n            this.items = this.items.slice(0);\n        }\n    }\n\n    /**\n     * Add a listener to the Runner\n     *\n     * Runners do not need to have scope or functions passed to them.\n     * All that is required is to pass the listening object and ensure that it has contains a function that has the same name\n     * as the name provided to the Runner when it was created.\n     *\n     * E.g. A listener passed to this Runner will require a 'complete' function.\n     *\n     * ```js\n     * import { Runner } from '@pixi/runner';\n     *\n     * const complete = new Runner('complete');\n     * ```\n     *\n     * The scope used will be the object itself.\n     * @param {any} item - The object that will be listening.\n     */\n    public add(item: unknown): this\n    {\n        if ((item as any)[this._name])\n        {\n            this.ensureNonAliasedItems();\n            this.remove(item);\n            this.items.push(item);\n        }\n\n        return this;\n    }\n\n    /**\n     * Remove a single listener from the dispatch queue.\n     * @param {any} item - The listener that you would like to remove.\n     */\n    public remove(item: unknown): this\n    {\n        const index = this.items.indexOf(item);\n\n        if (index !== -1)\n        {\n            this.ensureNonAliasedItems();\n            this.items.splice(index, 1);\n        }\n\n        return this;\n    }\n\n    /**\n     * Check to see if the listener is already in the Runner\n     * @param {any} item - The listener that you would like to check.\n     */\n    public contains(item: unknown): boolean\n    {\n        return this.items.includes(item);\n    }\n\n    /** Remove all listeners from the Runner */\n    public removeAll(): this\n    {\n        this.ensureNonAliasedItems();\n        this.items.length = 0;\n\n        return this;\n    }\n\n    /** Remove all references, don't use after this. */\n    public destroy(): void\n    {\n        this.removeAll();\n        this.items = null;\n        this._name = null;\n    }\n\n    /**\n     * `true` if there are no this Runner contains no listeners\n     * @readonly\n     */\n    public get empty(): boolean\n    {\n        return this.items.length === 0;\n    }\n\n    /**\n     * The name of the runner.\n     * @readonly\n     */\n    public get name(): string\n    {\n        return this._name;\n    }\n}\n\nObject.defineProperties(Runner.prototype, {\n    /**\n     * Alias for `emit`\n     * @memberof PIXI.Runner#\n     * @method dispatch\n     * @see PIXI.Runner#emit\n     */\n    dispatch: { value: Runner.prototype.emit },\n    /**\n     * Alias for `emit`\n     * @memberof PIXI.Runner#\n     * @method run\n     * @see PIXI.Runner#emit\n     */\n    run: { value: Runner.prototype.emit },\n});\n"],"mappings":"AA6CO,MAAMA,MACb;EAQIC,YAAYC,IACZ;IACI,KAAKC,KAAA,GAAQ,EAAC;IACd,KAAKC,KAAQ,GAAAF,IAAA;IACb,KAAKG,WAAc;EAAA;EAShBC,KAAKC,EAAc,EAAAC,EAAA,EAAcC,EAAA,EAAcC,EAClD,EAAAC,EAAA,EAAcC,EAAc,EAAAC,EAAA,EAAcC,EAC9C;IACQ,IAAAC,SAAA,CAAUC,MAAA,GAAS,CACvB;MACU,UAAIC,KAAA,CAAM,uBAAuB;IAAA;IAGrC;MAAEf,IAAA;MAAMC;IAAU;IAEnB,KAAAE,WAAA;IAEL,SAASa,CAAA,GAAI,CAAG,EAAAC,GAAA,GAAMhB,KAAA,CAAMa,MAAQ,EAAAE,CAAA,GAAIC,GAAA,EAAKD,CAC7C;MACUf,KAAA,CAAAe,CAAA,EAAGhB,IAAA,EAAMK,EAAI,EAAAC,EAAA,EAAIC,EAAA,EAAIC,EAAI,EAAAC,EAAA,EAAIC,EAAI,EAAAC,EAAA,EAAIC,EAAE;IAAA;IAG7C,IAAAX,KAAA,KAAU,KAAKA,KACnB;MACS,KAAAE,WAAA;IAAA;IAGF;EAAA;EAGXe,qBACAA,CAAA;IACI,IAAI,KAAKf,WAAc,QAAK,IAAK,CAAAF,KAAA,CAAMa,MAAA,GAAS,CAChD;MACI,KAAKX,WAAc;MACnB,KAAKF,KAAQ,QAAKA,KAAM,CAAAkB,KAAA,CAAM,CAAC;IAAA;EACnC;EAqBGC,IAAIC,IACX;IACS,IAAAA,IAAA,CAAa,KAAKnB,KACvB;MACI,KAAKgB,qBAAsB;MAC3B,KAAKI,MAAA,CAAOD,IAAI;MACX,KAAApB,KAAA,CAAMsB,IAAA,CAAKF,IAAI;IAAA;IAGjB;EAAA;EAOJC,OAAOD,IACd;IACI,MAAMG,KAAQ,QAAKvB,KAAM,CAAAwB,OAAA,CAAQJ,IAAI;IAErC,IAAIG,KAAA,KAAU,CACd;MACI,KAAKN,qBAAsB;MACtB,KAAAjB,KAAA,CAAMyB,MAAO,CAAAF,KAAA,EAAO,CAAC;IAAA;IAGvB;EAAA;EAOJG,SAASN,IAChB;IACW,YAAKpB,KAAM,CAAA2B,QAAA,CAASP,IAAI;EAAA;EAInCQ,SACAA,CAAA;IACI,KAAKX,qBAAsB;IAC3B,KAAKjB,KAAA,CAAMa,MAAS;IAEb;EAAA;EAIXgB,OACAA,CAAA;IACI,KAAKD,SAAU;IACf,KAAK5B,KAAQ;IACb,KAAKC,KAAQ;EAAA;EAOjB,IAAW6B,KACXA,CAAA;IACW,YAAK9B,KAAA,CAAMa,MAAW;EAAA;EAOjC,IAAWd,IACXA,CAAA;IACI,OAAO,IAAK,CAAAE,KAAA;EAAA;AAEpB;AAEA8B,MAAO,CAAAC,gBAAA,CAAiBnC,MAAA,CAAOoC,SAAW;EAOtCC,QAAU;IAAEC,KAAO,EAAAtC,MAAA,CAAOoC,SAAA,CAAU9B;EAAK;EAOzCiC,GAAK;IAAED,KAAO,EAAAtC,MAAA,CAAOoC,SAAA,CAAU9B;EAAK;AACxC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}